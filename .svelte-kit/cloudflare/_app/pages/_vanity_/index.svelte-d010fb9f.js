import{S as d,i as m,s as v,v as g,w as y,x as _,p as h,n as w,A as b}from"../../chunks/vendor-22677977.js";import{f}from"../../chunks/request-2d5483df.js";import{B as j}from"../../chunks/BotServerPage-4b9fe93b.js";import"../../chunks/BristlefrostMeta-4b5eefb5.js";import"../../chunks/enums-06152dee.js";import"../../chunks/stores-56fb81e3.js";function k(r){let e,n;return e=new j({props:{data:r[1],type:r[0]}}),{c(){g(e.$$.fragment)},l(t){y(e.$$.fragment,t)},m(t,s){_(e,t,s),n=!0},p(t,[s]){const a={};s&2&&(a.data=t[1]),s&1&&(a.type=t[0]),e.$set(a)},i(t){n||(h(e.$$.fragment,t),n=!0)},o(t){w(e.$$.fragment,t),n=!1},d(t){b(e,t)}}}const I=!1;async function P({params:r,fetch:e,session:n,stuff:t}){if(r.vanity=="servers")return{status:307,redirect:"/frostpaw/servers/"};const s=`/api/v2/code/${r.vanity}`,a=await f(s,"",e);if(a.ok){let i=await a.json(),p=i.redirect,u=i.type;const l=`/api/v2/${u}s/${p}/_sunbeam`,c=await f(l,"",e);if(c.ok){let o=await c.json();return console.log(o),{props:{data:o.data,cacheVersion:o.fl_cache_ver,type:u}}}return{status:a.status,error:new Error("Invalid Vanity")}}return{status:a.status,error:new Error("Invalid Vanity")}}function B(r,e,n){let{data:t}=e,{type:s}=e;return s=="guild"&&(s="server"),r.$$set=a=>{"data"in a&&n(1,t=a.data),"type"in a&&n(0,s=a.type)},[s,t]}class U extends d{constructor(e){super();m(this,e,B,k,v,{data:1,type:0})}}export{U as default,P as load,I as prerender};
